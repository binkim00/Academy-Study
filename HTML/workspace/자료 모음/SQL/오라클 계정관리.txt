구분	      	  | 개념 			    | 설명 	               | 예시/명령어

🧍‍♂️ 유저 (User) 	  | 로그인 가능한 계정 	    | DB 접속, 객체 소유자 	   | CREATE USER kim IDENTIFIED BY pw;
📂 스키마 (Schema) | 유저가 소유한 객체들의 집합  | 테이블, 뷰, 인덱스 등 	   | kim.emp, kim.dept
➕ 유저 생성 	  | 계정 만들기  	 	    | 비번 설정 필요 	   | CREATE USER user1 IDENTIFIED BY pw1;
🔐 권한 부여 	  | 권한을 유저나 롤에 줌 	    | SELECT, CREATE TABLE 등 | GRANT CREATE TABLE TO user1;
🚫 권한 회수 	  | 권한 제거 		    | 권한 제한 시 사용 	   | REVOKE CREATE TABLE FROM user1;
🔁 롤 (Role) 	  | 권한 묶음 		    | DBA, CONNECT 등 	   | GRANT DBA TO admin1;
🔒 계정 잠금 	  | 계정 잠시 중지 		    | 로그인 차단 	 	   | ALTER USER user1 ACCOUNT LOCK;
🔓 계정 해제 	  | 잠금 해제 		    | 로그인 허용 		   | ALTER USER user1 ACCOUNT UNLOCK;
🔑 비번 변경 	  | 비밀번호 변경 		    | 보안 조치 		   | ALTER USER user1 IDENTIFIED BY newpw;
🔍 계정 조회 	  | 계정 상태 확인		    | 생성일, 상태 등 	   | SELECT * FROM dba_users;
🧹 계정 삭제 	  | 계정과 객체 제거 	    | CASCADE 옵션 필요 	   | DROP USER user1 CASCADE;
⏳ 비번 만료 정책 	  | 비번 주기 설정 	 	    | 기본은 180일 등 	   | ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;
📌 객체 접근 	  | 다른 유저의 객체 사용 	    | 스키마.객체명 + 권한 필요 | SELECT * FROM kim.emp;
🧩 SYNONYM 	  | 객체의 별칭 		    | 스키마 생략 가능 	   | CREATE SYNONYM emp FOR kim.emp;

구분	 | 권한 (Privilege)				          	| 롤 (Role)

정의	 | 특정 작업을 할 수 있는 능력 (예: 테이블 생성, 조회 등)	| 여러 권한을 묶어놓은 “묶음 이름”
적용 대상 | 유저, 롤에 직접 부여 가능				| 유저 또는 다른 롤에 부여 가능
예시	 | CREATE TABLE, SELECT, INSERT 등 			| DBA, RESOURCE, CONNECT 등
목적	 | 세밀하게 접근 제어 				| 권한을 그룹 단위로 일괄 관리
사용 방식 | 개별로 직접 부여 				| 한 번에 여러 권한을 묶어서 부여